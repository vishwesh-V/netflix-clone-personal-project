[{"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\lib\\firebase.prod.js":"1","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\pages\\home.js":"2","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\global-styles.js":"3","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\header\\styles\\header.js":"4","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\index.js":"5","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\cards\\styles\\card.js":"6","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\pages\\signup.js":"7","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\pages\\browse.js":"8","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\loading\\styles\\loading.js":"9","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\containers\\browse.js":"10","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\pages\\signin.js":"11","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\feature\\styles\\feature.js":"12","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\hooks\\use-auth-listener.js":"13","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\profiles\\styles\\profiles.js":"14","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\opt-form\\styles\\opt-form.js":"15","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\pages\\index.js":"16","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\context\\firebase.js":"17","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\jumbotron\\styles\\jumbotron.js":"18","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\seed.js":"19","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\accordion\\index.js":"20","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\opt-form\\index.js":"21","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\player\\styles\\player.js":"22","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\hooks\\index.js":"23","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\footer\\styles\\footer.js":"24","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\form\\styles\\form.js":"25","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\containers\\jumbotron.js":"26","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\loading\\index.js":"27","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\containers\\header.js":"28","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\profiles\\index.js":"29","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\app.js":"30","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\hooks\\use-content.js":"31","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\accordion\\styles\\accordion.js":"32","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\cards\\index.js":"33","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\utils\\selection-filter.js":"34","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\footer\\index.js":"35","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\player\\index.js":"36","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\jumbotron\\index.js":"37"},{"size":507,"mtime":1607866095587,"results":"38","hashOfConfig":"39"},{"size":1973,"mtime":1607501156513,"results":"40","hashOfConfig":"39"},{"size":429,"mtime":1607264266118,"results":"41","hashOfConfig":"39"},{"size":5235,"mtime":1607774931933,"results":"42","hashOfConfig":"39"},{"size":576,"mtime":1607864798832,"results":"43","hashOfConfig":"39"},{"size":4265,"mtime":1630114847962,"results":"44","hashOfConfig":"39"},{"size":3348,"mtime":1607500884859,"results":"45","hashOfConfig":"39"},{"size":420,"mtime":1607579344081,"results":"46","hashOfConfig":"39"},{"size":1817,"mtime":1607579673825,"results":"47","hashOfConfig":"39"},{"size":5191,"mtime":1607864505653,"results":"48","hashOfConfig":"39"},{"size":2711,"mtime":1607524001469,"results":"49","hashOfConfig":"39"},{"size":593,"mtime":1607407971738,"results":"50","hashOfConfig":"39"},{"size":741,"mtime":1607512155849,"results":"51","hashOfConfig":"39"},{"size":1214,"mtime":1607578558922,"results":"52","hashOfConfig":"39"},{"size":1522,"mtime":1607429189282,"results":"53","hashOfConfig":"39"},{"size":180,"mtime":1607406859673,"results":"54","hashOfConfig":"39"},{"size":93,"mtime":1607417474123,"results":"55","hashOfConfig":"39"},{"size":1241,"mtime":1607319926032,"results":"56","hashOfConfig":"39"},{"size":4347,"mtime":1607866069649,"results":"57","hashOfConfig":"39"},{"size":1706,"mtime":1607326929930,"results":"58","hashOfConfig":"39"},{"size":926,"mtime":1607425440042,"results":"59","hashOfConfig":"39"},{"size":1713,"mtime":1607780462272,"results":"60","hashOfConfig":"39"},{"size":117,"mtime":1607517015627,"results":"61","hashOfConfig":"39"},{"size":1008,"mtime":1607427099991,"results":"62","hashOfConfig":"39"},{"size":2530,"mtime":1607496522492,"results":"63","hashOfConfig":"39"},{"size":692,"mtime":1607265527371,"results":"64","hashOfConfig":"39"},{"size":442,"mtime":1607579807116,"results":"65","hashOfConfig":"39"},{"size":518,"mtime":1607408169355,"results":"66","hashOfConfig":"39"},{"size":923,"mtime":1607533018060,"results":"67","hashOfConfig":"39"},{"size":1111,"mtime":1607524501058,"results":"68","hashOfConfig":"39"},{"size":795,"mtime":1607517061831,"results":"69","hashOfConfig":"39"},{"size":1799,"mtime":1607412023873,"results":"70","hashOfConfig":"39"},{"size":3126,"mtime":1630114685399,"results":"71","hashOfConfig":"39"},{"size":1019,"mtime":1630114882354,"results":"72","hashOfConfig":"39"},{"size":993,"mtime":1607268923182,"results":"73","hashOfConfig":"39"},{"size":1362,"mtime":1607780263479,"results":"74","hashOfConfig":"39"},{"size":1270,"mtime":1607319865679,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1qjk1tt",{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\lib\\firebase.prod.js",[],["167","168"],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\pages\\home.js",["169","170","171","172"],"import React, {useState} from 'react'; \r\nimport {useHistory} from 'react-router-dom';\r\nimport {FirebaseContext} from '../context/firebase';\r\nimport {Feature, OptForm} from '../components';\r\nimport { HeaderContainer } from '../containers/header';\r\nimport { FaqsContainer } from '../containers/faqs';\r\nimport {JumbotronContainer} from '../containers/jumbotron';\r\nimport {FooterContainer} from '../containers/footer';\r\n\r\n\r\n\r\nexport default function Home(){\r\n    const [emailAddress, setEmailAddress] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const isInvalid = emailAddress == '';\r\n    \r\n\r\n    return (\r\n        <>\r\n            <HeaderContainer>\r\n                <Feature>\r\n                    \r\n                    <Feature.Title>Unlimited movies, TV shows, and more.</Feature.Title>\r\n                    <Feature.SubTitle>Watch anywhere. Cancel anytime.</Feature.SubTitle>\r\n                    <OptForm>\r\n                        <OptForm.Text>Ready to watch? Enter your email to create or restart your membership.</OptForm.Text>\r\n                        <OptForm.Break/>\r\n                        <OptForm.Input \r\n                            placeholder = \"Email address\" \r\n                            value = {emailAddress}\r\n                            onChange= {({ target }) => setEmailAddress(target.value)}\r\n                        />\r\n                        \r\n                        <OptForm.Button disabled = {isInvalid} type = \"button\">\r\n                            Get Started\r\n                        </OptForm.Button>\r\n                        <OptForm.Break/>\r\n                        {error && <OptForm.Error>{error}</OptForm.Error>}\r\n                        <OptForm.Break/>\r\n\r\n                    </OptForm>\r\n                </Feature>\r\n                \r\n                \r\n            </HeaderContainer>\r\n            <JumbotronContainer />\r\n            <FaqsContainer />\r\n            <FooterContainer />\r\n        </>\r\n    );\r\n};\r\n    ",["173","174"],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\global-styles.js",[],["175","176"],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\header\\styles\\header.js",[],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\index.js",[],["177","178"],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\cards\\styles\\card.js",[],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\pages\\signup.js",["179"],"import React, {useState, useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {FirebaseContext} from '../context/firebase';\r\nimport { HeaderContainer } from '../containers/header';\r\nimport { FaqsContainer } from '../containers/faqs';\r\nimport { FooterContainer } from '../containers/footer';\r\nimport {Form} from '../components';\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nexport default function Signup(){\r\n    const history = useHistory();\r\n    const { firebase } = useContext(FirebaseContext);\r\n\r\n    const [firstName, setFirstName] = useState('');\r\n    const [emailAddress, setEmailAddress] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const isInvalid = firstName === '' || password === '' || emailAddress === '';\r\n    \r\n    const handleSignup = (event) =>{\r\n        event.preventDefault();\r\n\r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(emailAddress, password)\r\n            .then((result) =>\r\n                result.user\r\n                .updateProfile({\r\n                    displayName: firstName, \r\n                    photoURL: Math.floor(Math.random() * 5) + 1,\r\n\r\n                }).then(() => {\r\n                    history.push(ROUTES.BROWSE);\r\n                })\r\n                \r\n            )\r\n            .catch((error) => {\r\n                setFirstName('');\r\n                setEmailAddress('');\r\n                setPassword('');\r\n                setError(error.message);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <HeaderContainer>\r\n                <Form>\r\n                    <Form.Title>Sign Up</Form.Title>\r\n                    {error && <Form.Error>{error}</Form.Error>}\r\n                    <Form.Base onSubmit = {handleSignup} method = \"POST\">\r\n                        <Form.Input\r\n                            placeholder = \"First name\"\r\n                            value = {firstName}\r\n                            onChange= {({ target }) => setFirstName(target.value)}\r\n                        />\r\n                        <Form.Input\r\n                            placeholder = \"Email address\"\r\n                            value = {emailAddress}\r\n                            onChange= {({ target }) => setEmailAddress(target.value)}\r\n                        />\r\n                        <Form.Input\r\n                            placeholder = \"Password\"\r\n                            autoComplete = \"off\"\r\n                            type = \"password\"\r\n                            value = {password}\r\n                            onChange= {({ target }) => setPassword(target.value)}\r\n                        />\r\n                        <Form.Submit disabled = {isInvalid} type = \"submit\">\r\n                            Sign Up\r\n                        </Form.Submit>\r\n                    </Form.Base>\r\n                    <Form.Text>\r\n                        Already a user? <Form.Link to= \"/signin\">Sign in now.</Form.Link>\r\n                    </Form.Text>\r\n                    <Form.TextSmall>\r\n                        This page is protected by Google reCAPTCHA to ensure you're not a bot. Learn more. \r\n                    </Form.TextSmall>\r\n                </Form>\r\n            </HeaderContainer>\r\n            <FooterContainer />\r\n        </>\r\n    );\r\n}",["180","181"],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\pages\\browse.js",[],["182","183"],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\loading\\styles\\loading.js",[],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\containers\\browse.js",["184"],"import React, {useState, useContext, useEffect} from 'react';\r\nimport { SelectProfileContainer } from './profiles';\r\nimport { FirebaseContext } from '../context/firebase';\r\nimport {FooterContainer} from './footer';\r\nimport * as ROUTES from '../constants/routes';\r\nimport logo from '../logo.svg';\r\nimport {Card, Header, Loading, Player} from '../components';\r\nimport Fuse from 'fuse.js';\r\n\r\nexport function BrowseContainer({slides}){\r\n    const [category, setCategory] = useState('series');\r\n    const [slideRows, setSlideRows] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [profile, setProfile] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const {firebase} = useContext(FirebaseContext);\r\n    \r\n    const user = firebase.auth().currentUser || {};\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n          setLoading(false);\r\n        }, 3000);\r\n    }, [profile.displayName]);\r\n\r\n\r\n    useEffect(() => {\r\n        setSlideRows(slides[category]);\r\n    }, [slides, category]);\r\n\r\n    useEffect(()=>{\r\n        const fuse = new Fuse(slideRows, {keys: ['data.description', 'data.title', 'data.genre']});\r\n        const results = fuse.search(searchTerm).map(({item})=> item);\r\n        if (slideRows.length > 0 && searchTerm.length > 3 && results.length > 0){\r\n            setSlideRows(results);\r\n        } else{\r\n            setSlideRows(slides[category]);\r\n        }\r\n    }, [searchTerm])\r\n\r\n    return profile.displayName ? (\r\n        <>\r\n            {loading ? (\r\n                <Loading src= {user.photoURL}/>\r\n            ) : (\r\n                <Loading.ReleaseBody />\r\n            )}\r\n            <Header src=\"deadpool\" dontShowOnSmallViewPort>\r\n                <Header.Frame>\r\n                    <Header.Group>\r\n                        <Header.Logo to={ROUTES.HOME} src={logo} alt=\"Netflix\" />\r\n                        <Header.TextLink active= {category === 'series' ? 'true' : 'false'} onClick = {() => setCategory('series')} >Series</Header.TextLink>\r\n                        <Header.TextLink active= {category === 'movies' ? 'true' : 'false'} onClick = {() => setCategory('movies') }>Movies</Header.TextLink>\r\n                    </Header.Group>\r\n                    <Header.Group>\r\n                        <Header.Search serachTerm = {searchTerm} setSearchTerm = {setSearchTerm} />\r\n                        <Header.Profile>\r\n                            <Header.Picture src = {user.photoURL} />\r\n                            <Header.Dropdown>\r\n                                <Header.Group>\r\n                                    <Header.Picture src ={user.photoURL} />\r\n                                    <Header.TextLink>{user.displayName}</Header.TextLink>\r\n                                </Header.Group>\r\n                                <Header.Group>\r\n                                    <Header.TextLink onClick={() => firebase.auth().signOut()}>Sign out of Netflix</Header.TextLink>\r\n                                </Header.Group>\r\n                            </Header.Dropdown>\r\n                        </Header.Profile>\r\n                    </Header.Group>\r\n                </Header.Frame>\r\n                <Header.Feature>\r\n                    <Header.FeatureCallOut>Watch Deadpool 2</Header.FeatureCallOut>\r\n                    <Header.Text>\r\n                        Deadpool protects a young mutant Russell from the authorities and gets thrown in prison. However, he escapes and forms a team of mutants to prevent a time-travelling mercenary from killing Russell.\r\n                    </Header.Text>\r\n                    <Header.PlayButton>Play</Header.PlayButton>\r\n                </Header.Feature>\r\n            </Header>\r\n            <Card.Group>\r\n                {slideRows.map((slideItem) => (\r\n                    <Card key={`${category}-${slideItem.title.toLowerCase()}`}>\r\n                        <Card.Title>{slideItem.title}</Card.Title>\r\n                        <Card.Entities>\r\n                            {slideItem.data.map((item) => (\r\n                                <Card.Item key={item.docId} item={item}>\r\n                                    <Card.Image src={`/images/${category}/${item.genre}/${item.slug}/small.jpg`} />\r\n                                    <Card.Meta>\r\n                                        <Card.SubTitle>{item.title}</Card.SubTitle>\r\n                                        <Card.Text>{item.description}</Card.Text>\r\n                                    </Card.Meta>\r\n                                </Card.Item>\r\n                            ))}\r\n                        </Card.Entities>\r\n                            <Card.Feature category={category}>\r\n                                <Player>\r\n                                    <Player.Button />\r\n                                    <Player.Video src=\"/videos/bunny.mp4\" />\r\n                                </Player>\r\n                            </Card.Feature>\r\n                    </Card>\r\n                ))}\r\n            </Card.Group>\r\n            <FooterContainer/>\r\n        </>\r\n        \r\n    ) : (\r\n        <SelectProfileContainer user = {user} setProfile={setProfile}/>\r\n\r\n    );\r\n\r\n}\r\n\r\n    \r\n    \r\n    ","C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\pages\\signin.js",["185"],"import React, {useState, useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {FirebaseContext} from '../context/firebase';\r\nimport { HeaderContainer } from '../containers/header';\r\nimport { FaqsContainer } from '../containers/faqs';\r\nimport { FooterContainer } from '../containers/footer';\r\nimport {Form} from '../components';\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nexport default function Signin(){\r\n    const history = useHistory();\r\n    const {firebase} = useContext(FirebaseContext);\r\n    const [emailAddress, setEmailAddress] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const isInvalid = password === '' || emailAddress === '';\r\n    const handleSignIn = (event) => {\r\n        event.preventDefault();\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(emailAddress, password)\r\n            .then(()=>{\r\n                history.push(ROUTES.BROWSE);\r\n            })\r\n            .catch((error)=>{\r\n                setEmailAddress('');\r\n                setPassword('');\r\n                setError(error.message);\r\n            });\r\n    }\r\n    return (\r\n        <>\r\n            <HeaderContainer>\r\n                <Form>\r\n                    <Form.Title>Sign In</Form.Title>\r\n                    {error && <Form.Error>{error}</Form.Error>}\r\n                    <Form.Base onSubmit = {handleSignIn} method = \"POST\">\r\n                        <Form.Input\r\n                            placeholder = \"Email address\"\r\n                            value = {emailAddress}\r\n                            onChange= {({ target }) => setEmailAddress(target.value)}\r\n                        />\r\n                        <Form.Input\r\n                            placeholder = \"Password\"\r\n                            autoComplete = \"off\"\r\n                            type = \"password\"\r\n                            value = {password}\r\n                            onChange= {({ target }) => setPassword(target.value)}\r\n                        />\r\n                        <Form.Submit disabled = {isInvalid} type = \"submit\">\r\n                            Sign In\r\n                        </Form.Submit>\r\n                    </Form.Base>\r\n                    <Form.Text>\r\n                        New to Netflix? <Form.Link to= \"/signup\">Sign up now.</Form.Link>\r\n                    </Form.Text>\r\n                    <Form.TextSmall>\r\n                        This page is protected by Google reCAPTCHA to ensure you're not a bot. Learn more. \r\n                    </Form.TextSmall>\r\n                </Form>\r\n            </HeaderContainer>\r\n            <FooterContainer />\r\n        </>\r\n    );\r\n}",["186","187"],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\feature\\styles\\feature.js",[],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\hooks\\use-auth-listener.js",["188"],"import {useState, useEffect, useContext} from 'react';\r\n\r\nimport {FirebaseContext} from '../context/firebase';\r\n\r\nexport default function useAuthListener(){\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser')));\r\n\r\n    const {firebase} = useContext(FirebaseContext);\r\n\r\n    useEffect(()=>{\r\n        const listener = firebase.auth().onAuthStateChanged((authUser)=>{\r\n            if (authUser){\r\n                localStorage.setItem('authUser', JSON.stringify(authUser));\r\n                setUser(authUser);\r\n            }else{\r\n                localStorage.removeItem('authUser');\r\n                setUser(null);\r\n            }\r\n        });\r\n        return () => listener();\r\n    }, []);\r\n    return {user};\r\n\r\n}",["189","190"],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\profiles\\styles\\profiles.js",[],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\opt-form\\styles\\opt-form.js",[],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\pages\\index.js",[],["191","192"],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\context\\firebase.js",[],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\jumbotron\\styles\\jumbotron.js",[],["193","194"],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\seed.js",[],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\accordion\\index.js",[],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\opt-form\\index.js",[],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\player\\styles\\player.js",[],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\hooks\\index.js",[],["195","196"],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\footer\\styles\\footer.js",[],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\form\\styles\\form.js",[],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\containers\\jumbotron.js",[],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\loading\\index.js",[],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\containers\\header.js",[],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\profiles\\index.js",[],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\app.js",[],["197","198"],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\hooks\\use-content.js",["199"],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\accordion\\styles\\accordion.js",[],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\cards\\index.js",[],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\utils\\selection-filter.js",[],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\footer\\index.js",[],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\player\\index.js",["200"],"C:\\Users\\admin\\Desktop\\Netflix\\netflix\\src\\components\\jumbotron\\index.js",[],{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":2,"column":9,"nodeType":"207","messageId":"208","endLine":2,"endColumn":19},{"ruleId":"205","severity":1,"message":"209","line":3,"column":9,"nodeType":"207","messageId":"208","endLine":3,"endColumn":24},{"ruleId":"205","severity":1,"message":"210","line":14,"column":19,"nodeType":"207","messageId":"208","endLine":14,"endColumn":27},{"ruleId":"211","severity":1,"message":"212","line":16,"column":36,"nodeType":"213","messageId":"214","endLine":16,"endColumn":38},{"ruleId":"201","replacedBy":"215"},{"ruleId":"203","replacedBy":"216"},{"ruleId":"201","replacedBy":"217"},{"ruleId":"203","replacedBy":"218"},{"ruleId":"201","replacedBy":"219"},{"ruleId":"203","replacedBy":"220"},{"ruleId":"205","severity":1,"message":"221","line":5,"column":10,"nodeType":"207","messageId":"208","endLine":5,"endColumn":23},{"ruleId":"201","replacedBy":"222"},{"ruleId":"203","replacedBy":"223"},{"ruleId":"201","replacedBy":"224"},{"ruleId":"203","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":40,"column":8,"nodeType":"228","endLine":40,"endColumn":20,"suggestions":"229"},{"ruleId":"205","severity":1,"message":"221","line":5,"column":10,"nodeType":"207","messageId":"208","endLine":5,"endColumn":23},{"ruleId":"201","replacedBy":"230"},{"ruleId":"203","replacedBy":"231"},{"ruleId":"226","severity":1,"message":"232","line":21,"column":8,"nodeType":"228","endLine":21,"endColumn":10,"suggestions":"233"},{"ruleId":"201","replacedBy":"234"},{"ruleId":"203","replacedBy":"235"},{"ruleId":"201","replacedBy":"236"},{"ruleId":"203","replacedBy":"237"},{"ruleId":"201","replacedBy":"238"},{"ruleId":"203","replacedBy":"239"},{"ruleId":"201","replacedBy":"240"},{"ruleId":"203","replacedBy":"241"},{"ruleId":"201","replacedBy":"242"},{"ruleId":"203","replacedBy":"243"},{"ruleId":"226","severity":1,"message":"244","line":25,"column":8,"nodeType":"228","endLine":25,"endColumn":10,"suggestions":"245"},{"ruleId":"205","severity":1,"message":"246","line":37,"column":12,"nodeType":"207","messageId":"208","endLine":37,"endColumn":22},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'FirebaseContext' is defined but never used.","'setError' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["247"],["248"],["247"],["248"],["247"],["248"],"'FaqsContainer' is defined but never used.",["247"],["248"],["247"],["248"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'category', 'slideRows', and 'slides'. Either include them or remove the dependency array. If 'setSlideRows' needs the current value of 'slides', you can also switch to useReducer instead of useState and read 'slides' in the reducer.","ArrayExpression",["249"],["247"],["248"],"React Hook useEffect has a missing dependency: 'firebase'. Either include it or remove the dependency array.",["250"],["247"],["248"],["247"],["248"],["247"],["248"],["247"],["248"],["247"],["248"],"React Hook useEffect has missing dependencies: 'firebase' and 'target'. Either include them or remove the dependency array.",["251"],"'showPlayer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},"Update the dependencies array to be: [category, searchTerm, slideRows, slides]",{"range":"258","text":"259"},"Update the dependencies array to be: [firebase]",{"range":"260","text":"261"},"Update the dependencies array to be: [firebase, target]",{"range":"262","text":"263"},[1438,1450],"[category, searchTerm, slideRows, slides]",[712,714],"[firebase]",[755,757],"[firebase, target]"]