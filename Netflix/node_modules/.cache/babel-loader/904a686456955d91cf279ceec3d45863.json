{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Netflix\\\\netflix\\\\src\\\\components\\\\accordion\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useContext, createContext } from 'react';\nimport { Container, Frame, Title, Item, Inner, Header, Body } from './styles/accordion';\nconst ToggleContext = /*#__PURE__*/createContext();\nexport default function Accordion({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Container, { ...restProps,\n    children: /*#__PURE__*/_jsxDEV(Inner, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = Accordion;\n\nAccordion.Title = function AccordionTitle({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Title, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);\n};\n\nAccordion.Frame = function AccordionFrame({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Frame, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n\nAccordion.Item = _s(function AccordionItem({\n  children,\n  ...restProps\n}) {\n  _s();\n\n  //gives user ability to toggle\n  const [toggleShow, setToggleShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(ToggleContext.Provider, {\n    value: {\n      toggleShow,\n      setToggleShow\n    },\n    children: /*#__PURE__*/_jsxDEV(Item, { ...restProps,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}, \"tCX/VzjJ88VBg9+I9/DmKaZ9kqM=\");\nAccordion.Header = _s2(function AccordionHeader({\n  children,\n  ...restProps\n}) {\n  _s2();\n\n  const {\n    toggleShow,\n    setToggleShow\n  } = useContext(ToggleContext);\n  return /*#__PURE__*/_jsxDEV(Header, {\n    onClick: () => setToggleShow(toggleShow => !toggleShow),\n    ...restProps,\n    children: [children, toggleShow ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/images/icons/close-slim.png\",\n      alt: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/images/icons/add.png\",\n      alt: \"Open\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}, \"iDxsG1kkBf724uIyPVFpg4UwH7w=\");\nAccordion.Body = _s3(function AccordionBody({\n  children,\n  ...restProps\n}) {\n  _s3();\n\n  const {\n    toggleShow\n  } = useContext(ToggleContext);\n  return toggleShow ? /*#__PURE__*/_jsxDEV(Body, { ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 25\n  }, this) : null;\n}, \"pnHGgxQ8cqAP7x/RK6BCBNHO5ug=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/Netflix/netflix/src/components/accordion/index.js"],"names":["React","useState","useContext","createContext","Container","Frame","Title","Item","Inner","Header","Body","ToggleContext","Accordion","children","restProps","AccordionTitle","AccordionFrame","AccordionItem","toggleShow","setToggleShow","AccordionHeader","AccordionBody"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,aAArC,QAA0D,OAA1D;AACA,SAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,KAA1B,EAAiCC,IAAjC,EAAuCC,KAAvC,EAA8CC,MAA9C,EAAsDC,IAAtD,QAAiE,oBAAjE;AAEA,MAAMC,aAAa,gBAAGR,aAAa,EAAnC;AAEA,eAAe,SAASS,SAAT,CAAmB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAnB,EAA6C;AACxD,sBACI,QAAC,SAAD,OAAeA,SAAf;AAAA,2BACI,QAAC,KAAD;AAAA,gBAAQD;AAAR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KANuBD,S;;AAQxBA,SAAS,CAACN,KAAV,GAAkB,SAASS,cAAT,CAAwB;AAACF,EAAAA,QAAD;AAAW,KAAGC;AAAd,CAAxB,EAAiD;AAC/D,sBAAO,QAAC,KAAD,OAAWA,SAAX;AAAA,cAAuBD;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAFD;;AAIAD,SAAS,CAACP,KAAV,GAAkB,SAASW,cAAT,CAAwB;AAACH,EAAAA,QAAD;AAAW,KAAGC;AAAd,CAAxB,EAAiD;AAC/D,sBAAO,QAAC,KAAD,OAAWA,SAAX;AAAA,cAAuBD;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAFD;;AAIAD,SAAS,CAACL,IAAV,MAAiB,SAASU,aAAT,CAAuB;AAACJ,EAAAA,QAAD;AAAW,KAAGC;AAAd,CAAvB,EAAgD;AAAA;;AAAE;AAC/D,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,KAAD,CAA5C;AACA,sBACI,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAI;AAACiB,MAAAA,UAAD;AAAaC,MAAAA;AAAb,KAAjC;AAAA,2BACI,QAAC,IAAD,OAAUL,SAAV;AAAA,gBAAsBD;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAPD;AASAD,SAAS,CAACH,MAAV,OAAmB,SAASW,eAAT,CAAyB;AAACP,EAAAA,QAAD;AAAW,KAAGC;AAAd,CAAzB,EAAkD;AAAA;;AACjE,QAAM;AAAEI,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA+BjB,UAAU,CAACS,aAAD,CAA/C;AACA,sBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAI,MAAKQ,aAAa,CAACD,UAAU,IAAI,CAACA,UAAhB,CAArC;AAAA,OAAsEJ,SAAtE;AAAA,eACKD,QADL,EAEKK,UAAU,gBACP;AAAK,MAAA,GAAG,EAAG,8BAAX;AAA0C,MAAA,GAAG,EAAG;AAAhD;AAAA;AAAA;AAAA;AAAA,YADO,gBAGP;AAAK,MAAA,GAAG,EAAE,uBAAV;AAAkC,MAAA,GAAG,EAAG;AAAxC;AAAA;AAAA;AAAA;AAAA,YALR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAZD;AAcAN,SAAS,CAACF,IAAV,OAAiB,SAASW,aAAT,CAAuB;AAACR,EAAAA,QAAD;AAAW,KAAGC;AAAd,CAAvB,EAAiD;AAAA;;AAC9D,QAAM;AAACI,IAAAA;AAAD,MAAehB,UAAU,CAACS,aAAD,CAA/B;AAEA,SAAOO,UAAU,gBAAG,QAAC,IAAD,OAAUJ,SAAV;AAAA,cAAsBD;AAAtB;AAAA;AAAA;AAAA;AAAA,UAAH,GAA4C,IAA7D;AACH,CAJD","sourcesContent":["import React, {useState, useContext, createContext } from 'react';\r\nimport {Container, Frame, Title, Item, Inner, Header, Body} from './styles/accordion';\r\n\r\nconst ToggleContext = createContext();\r\n\r\nexport default function Accordion({ children, ...restProps}){\r\n    return (\r\n        <Container {...restProps}>\r\n            <Inner>{children}</Inner>\r\n        </Container>\r\n    );\r\n}\r\n\r\nAccordion.Title = function AccordionTitle({children, ...restProps}){\r\n    return <Title {...restProps}>{children}</Title>;\r\n};\r\n\r\nAccordion.Frame = function AccordionFrame({children, ...restProps}){\r\n    return <Frame {...restProps}>{children}</Frame>;\r\n};\r\n\r\nAccordion.Item = function AccordionItem({children, ...restProps}){ //gives user ability to toggle\r\n    const [toggleShow, setToggleShow] = useState(false);\r\n    return (\r\n        <ToggleContext.Provider value = {{toggleShow, setToggleShow }}> \r\n            <Item {...restProps}>{children}</Item>\r\n        </ToggleContext.Provider>\r\n    );\r\n};\r\n\r\nAccordion.Header = function AccordionHeader({children, ...restProps}){\r\n    const { toggleShow, setToggleShow} = useContext(ToggleContext);\r\n    return (\r\n        <Header onClick = {()=> setToggleShow(toggleShow => !toggleShow)} {...restProps}>\r\n            {children}\r\n            {toggleShow ? (\r\n                <img src = \"/images/icons/close-slim.png\" alt = \"Close\" />\r\n            ): (\r\n                <img src= \"/images/icons/add.png\" alt = \"Open\" />\r\n            )}\r\n        </Header>\r\n    );\r\n};\r\n\r\nAccordion.Body = function AccordionBody({children, ...restProps}) {\r\n    const {toggleShow} = useContext(ToggleContext);\r\n\r\n    return toggleShow ? <Body {...restProps}>{children}</Body> : null;\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}