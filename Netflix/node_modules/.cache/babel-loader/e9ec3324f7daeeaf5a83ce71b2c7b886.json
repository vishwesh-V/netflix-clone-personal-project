{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from 'react';\nimport { FirebaseContext } from '../context/firebase';\nexport default function useContent(target) {\n  _s();\n\n  const [content, setContent] = useState([]);\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  useEffect(() => {\n    firebase.firestore().collection(target).get().then(snapshot => {\n      const allContent = snapshot.docs.map(contentObj => ({ ...contentObj.data(),\n        docId: contentObj.id\n      }));\n      setContent(allContent);\n    }).catch(error => {\n      console.log(error.message);\n    });\n  }, []);\n  return {\n    [target]: content\n  };\n}\n\n_s(useContent, \"79Q0ufnwaQJWOWD2zOKYV7BrSNs=\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/Netflix/netflix/src/hooks/use-content.js"],"names":["useEffect","useState","useContext","FirebaseContext","useContent","target","content","setContent","firebase","firestore","collection","get","then","snapshot","allContent","docs","map","contentObj","data","docId","id","catch","error","console","log","message"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,EAA6BC,UAA7B,QAA8C,OAA9C;AACA,SAAQC,eAAR,QAA8B,qBAA9B;AAEA,eAAe,SAASC,UAAT,CAAoBC,MAApB,EAA2B;AAAA;;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAACO,IAAAA;AAAD,MAAaN,UAAU,CAACC,eAAD,CAA7B;AAEAH,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,QAAQ,CACHC,SADL,GAEKC,UAFL,CAEgBL,MAFhB,EAGKM,GAHL,GAIKC,IAJL,CAIWC,QAAD,IAAa;AACf,YAAMC,UAAU,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,UAAD,KAAiB,EAClD,GAAGA,UAAU,CAACC,IAAX,EAD+C;AAElDC,QAAAA,KAAK,EAAEF,UAAU,CAACG;AAFgC,OAAjB,CAAlB,CAAnB;AAMAb,MAAAA,UAAU,CAACO,UAAD,CAAV;AACH,KAZL,EAaKO,KAbL,CAaYC,KAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH,KAfL;AAgBH,GAjBQ,EAiBN,EAjBM,CAAT;AAkBA,SAAO;AAAC,KAACpB,MAAD,GAAUC;AAAX,GAAP;AACH;;GAvBuBF,U","sourcesContent":["import {useEffect, useState, useContext} from 'react';\r\nimport {FirebaseContext} from '../context/firebase';\r\n\r\nexport default function useContent(target){\r\n    const [content, setContent] = useState([]);\r\n    const {firebase} = useContext(FirebaseContext);\r\n\r\n    useEffect(()=>{\r\n        firebase\r\n            .firestore()\r\n            .collection(target)\r\n            .get()\r\n            .then((snapshot) =>{\r\n                const allContent = snapshot.docs.map((contentObj) => ({\r\n                    ...contentObj.data(),\r\n                    docId: contentObj.id,\r\n\r\n                }));\r\n\r\n                setContent(allContent);\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error.message);\r\n            });\r\n    }, []);\r\n    return {[target]: content};\r\n}"]},"metadata":{},"sourceType":"module"}