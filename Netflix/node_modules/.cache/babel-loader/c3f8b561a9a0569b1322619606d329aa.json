{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Netflix\\\\netflix\\\\src\\\\pages\\\\signin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FirebaseContext } from '../context/firebase';\nimport { HeaderContainer } from '../containers/header';\nimport { FaqsContainer } from '../containers/faqs';\nimport { FooterContainer } from '../containers/footer';\nimport { Form } from '../components';\nimport * as ROUTES from '../constants/routes';\nexport default function Signin() {\n  _s();\n\n  const history = useHistory();\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  const [emailAddress, setEmailAddress] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const isInvalid = password == '' || emailAddress == '';\n\n  const handleSignIn = event => {\n    event.preventDefault();\n    firebase.auth().signInWithEmailAndPassword(emailAddress, password).then(() => {\n      history.push(ROUTES.BROWSE);\n    }).catch(error => {\n      setEmailAddress('');\n      setPassword('');\n      setError(error.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderContainer, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Title, {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(Form.Error, {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Form.Base, {\n          onSubmit: handleSignIn,\n          method: \"POST\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            placeholder: \"Email address\",\n            value: emailAddress,\n            onChange: ({\n              target\n            }) => setEmailAddress(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            placeholder: \"Password\",\n            autoComplete: \"off\",\n            type: \"password\",\n            value: password,\n            onChange: ({\n              target\n            }) => setPassword(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Submit, {\n            disabled: isInvalid,\n            type: \"submit\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: [\"New to Netflix? \", /*#__PURE__*/_jsxDEV(Form.Link, {\n            to: \"/signup\",\n            children: \"Sign up now.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.TextSmall, {\n          children: \"This page is protected by Google reCAPTCHA to ensure you're not a bot. Learn more.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FooterContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Signin, \"Ln08qHUjEnfp7QdSYaG38jIpF/E=\", false, function () {\n  return [useHistory];\n});\n\n_c = Signin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/Netflix/netflix/src/pages/signin.js"],"names":["React","useState","useContext","useHistory","FirebaseContext","HeaderContainer","FaqsContainer","FooterContainer","Form","ROUTES","Signin","history","firebase","emailAddress","setEmailAddress","password","setPassword","error","setError","isInvalid","handleSignIn","event","preventDefault","auth","signInWithEmailAndPassword","then","push","BROWSE","catch","message","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {FirebaseContext} from '../context/firebase';\r\nimport { HeaderContainer } from '../containers/header';\r\nimport { FaqsContainer } from '../containers/faqs';\r\nimport { FooterContainer } from '../containers/footer';\r\nimport {Form} from '../components';\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nexport default function Signin(){\r\n    const history = useHistory();\r\n    const {firebase} = useContext(FirebaseContext);\r\n    const [emailAddress, setEmailAddress] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const isInvalid = password == '' || emailAddress == '';\r\n    const handleSignIn = (event) => {\r\n        event.preventDefault();\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(emailAddress, password)\r\n            .then(()=>{\r\n                history.push(ROUTES.BROWSE);\r\n            })\r\n            .catch((error)=>{\r\n                setEmailAddress('');\r\n                setPassword('');\r\n                setError(error.message);\r\n            });\r\n    }\r\n    return (\r\n        <>\r\n            <HeaderContainer>\r\n                <Form>\r\n                    <Form.Title>Sign In</Form.Title>\r\n                    {error && <Form.Error>{error}</Form.Error>}\r\n                    <Form.Base onSubmit = {handleSignIn} method = \"POST\">\r\n                        <Form.Input\r\n                            placeholder = \"Email address\"\r\n                            value = {emailAddress}\r\n                            onChange= {({ target }) => setEmailAddress(target.value)}\r\n                        />\r\n                        <Form.Input\r\n                            placeholder = \"Password\"\r\n                            autoComplete = \"off\"\r\n                            type = \"password\"\r\n                            value = {password}\r\n                            onChange= {({ target }) => setPassword(target.value)}\r\n                        />\r\n                        <Form.Submit disabled = {isInvalid} type = \"submit\">\r\n                            Sign In\r\n                        </Form.Submit>\r\n                    </Form.Base>\r\n                    <Form.Text>\r\n                        New to Netflix? <Form.Link to= \"/signup\">Sign up now.</Form.Link>\r\n                    </Form.Text>\r\n                    <Form.TextSmall>\r\n                        This page is protected by Google reCAPTCHA to ensure you're not a bot. Learn more. \r\n                    </Form.TextSmall>\r\n                </Form>\r\n            </HeaderContainer>\r\n            <FooterContainer />\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}