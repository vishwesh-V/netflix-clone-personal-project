{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport { FirebaseContext } from '../context/firebase';\nexport default function useAuthListener() {\n  _s();\n\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser')));\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  useEffect(() => {\n    const listener = firebase.auth().onAuthStateChanged(authUser => {\n      if (authUser) {\n        localStorage.setItem('authUser', JSON.stringify(authUser));\n        setUser(authUser);\n      } else {\n        localStorage.removeItem('authUser');\n        setUser(null);\n      }\n    });\n    return () => listener();\n  }, []);\n  return {\n    user\n  };\n}\n\n_s(useAuthListener, \"lxrs7LA0HlvDNBvv+zk4UH4Saoo=\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/Netflix/netflix/src/hooks/use-auth-listener.js"],"names":["useState","useEffect","useContext","FirebaseContext","useAuthListener","user","setUser","JSON","parse","localStorage","getItem","firebase","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,UAA7B,QAA8C,OAA9C;AAEA,SAAQC,eAAR,QAA8B,qBAA9B;AAEA,eAAe,SAASC,eAAT,GAA0B;AAAA;;AACrC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAACO,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAD,CAAhC;AAEA,QAAM;AAACC,IAAAA;AAAD,MAAaT,UAAU,CAACC,eAAD,CAA7B;AAEAF,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMW,QAAQ,GAAGD,QAAQ,CAACE,IAAT,GAAgBC,kBAAhB,CAAoCC,QAAD,IAAY;AAC5D,UAAIA,QAAJ,EAAa;AACTN,QAAAA,YAAY,CAACO,OAAb,CAAqB,UAArB,EAAiCT,IAAI,CAACU,SAAL,CAAeF,QAAf,CAAjC;AACAT,QAAAA,OAAO,CAACS,QAAD,CAAP;AACH,OAHD,MAGK;AACDN,QAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB;AACAZ,QAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ,KARgB,CAAjB;AASA,WAAO,MAAMM,QAAQ,EAArB;AACH,GAXQ,EAWN,EAXM,CAAT;AAYA,SAAO;AAACP,IAAAA;AAAD,GAAP;AAGH;;GApBuBD,e","sourcesContent":["import {useState, useEffect, useContext} from 'react';\r\n\r\nimport {FirebaseContext} from '../context/firebase';\r\n\r\nexport default function useAuthListener(){\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser')));\r\n\r\n    const {firebase} = useContext(FirebaseContext);\r\n\r\n    useEffect(()=>{\r\n        const listener = firebase.auth().onAuthStateChanged((authUser)=>{\r\n            if (authUser){\r\n                localStorage.setItem('authUser', JSON.stringify(authUser));\r\n                setUser(authUser);\r\n            }else{\r\n                localStorage.removeItem('authUser');\r\n                setUser(null);\r\n            }\r\n        });\r\n        return () => listener();\r\n    }, []);\r\n    return {user};\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}